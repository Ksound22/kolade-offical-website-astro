---
import { fetchAllArticles, formatTagsAndCats } from "../../../../utils";
import ArticleCard from "../../../components/ArticleCard.astro";
import Layout from "../../../layouts/Layout.astro";

export async function getStaticPaths() {
  const allArticles = await fetchAllArticles();

  // Extract unique tags from all articles
  const uniqueTags = [...new Set(allArticles.flatMap(article => article.data.tags))];

  // Return paths for each tag
  return uniqueTags.map(tag => ({
    params: {
      slug: tag.toLowerCase().replace(/\s+/g, "-")
    },

    props: { tag }
  }));
}

const { slug } = Astro.params;
const { tag } = Astro.props;

if (tag === undefined) {
  throw new Error('Tag is required');
}

const allArticles = await fetchAllArticles();
const randomisedArticles = allArticles.sort(() => Math.random() - Math.random())
const tagArticles = randomisedArticles.filter(article => 
  article.data.tags.some(tag => formatTagsAndCats(tag) === slug)
);
---
  
<Layout
  title=`Articles Tagged ${tag}`
  description=`Kolade's blog ${tag} articles`
  canonicalLink=`https://www.koladechris.com/blog/${formatTagsAndCats(tag)}`
  title=`Kolade's blog article with tag ${tag}`
  description=`Kolade's blog article with tag ${tag}`
  canonicalLink=`https://www.koladechris.com/blog/${formatTagsAndCats(tag)}`
  OGUrl=`https://www.koladechris.com/blog/${formatTagsAndCats(tag)}`
  OGTitle=`Kolade's blog article with tag ${tag}`
  OGDesc=`Kolade's blog ${tag} articles`
  xtitle=`Kolade's blog article with tag ${tag}`
  xDesc=`Kolade's blog ${tag} articles`
>

  <h1>Articles Tagged {tag}</h1>

  <div class="article-cards">
    {tagArticles.map((article) => (
      <ArticleCard article={article} />
    ))}
  </div>
</Layout>

<style>

  h1 {
    font-size: var(--h1-font);
    margin-bottom: 2.5rem;
  }

  .article-cards {
    display: flex;
    flex-wrap: wrap;
    gap: 3.8rem;
  }
</style>